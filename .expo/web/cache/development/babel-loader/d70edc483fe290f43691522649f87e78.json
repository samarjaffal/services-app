{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samar\\\\Documents\\\\projects\\\\servicesapp\\\\servicesapp\\\\src\\\\components\\\\ListOfServices\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ServiceItem } from \"../ServiceItem\";\nimport { Link } from 'react-router-native';\nimport myServices from \"../../data/services\";\nimport theme from \"./../../styles/theme\";\nimport { db } from \"../../../database/firebase\";\nexport var ListOfServices = function ListOfServices(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Servicios' : _ref$title,\n      categoryId = _ref.categoryId,\n      filterByName = _ref.filterByName;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      services = _useState2[0],\n      setServices = _useState2[1];\n\n  useEffect(function () {\n    console.log('here');\n    var services = [];\n    db.collection('services').onSnapshot(function (querySnapshot) {\n      querySnapshot.docs.forEach(function _callee(doc) {\n        var service, user, category;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                service = doc.data();\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(service.user.get());\n\n              case 3:\n                user = _context.sent;\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(service.category.get());\n\n              case 6:\n                category = _context.sent;\n                service.user = user.data();\n                service.category = category.data();\n                services.push(service);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    });\n    setServices(services);\n  }, []);\n  useEffect(function () {\n    if (categoryId) {\n      var filteredServices = myServices.filter(function (service) {\n        return Number(service.category.id) === Number(categoryId);\n      });\n      setServices(filteredServices);\n    }\n  }, [categoryId]);\n  useEffect(function () {\n    if (filterByName) {\n      var filteredServices = myServices.filter(function (service) {\n        return service.name.toLowerCase().includes(filterByName.toLowerCase());\n      });\n      setServices(filteredServices);\n    }\n  }, [filterByName]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, title), services.map(function (service) {\n    return React.createElement(Link, {\n      key: service.id,\n      to: \"/service/\" + service.id,\n      component: TouchableWithoutFeedback,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, React.createElement(ServiceItem, {\n      id: service.id,\n      avatar: service.user.avatar,\n      name: service.name,\n      owner: service.user.name + \" \" + service.user.lastName,\n      category: service.category,\n      description: service.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 5\n  },\n  title: _objectSpread(_objectSpread({}, theme.common.title), {}, {\n    fontSize: theme.fontSizes.bigTitle,\n    color: theme.colors.white,\n    marginTop: 10\n  })\n});","map":{"version":3,"sources":["C:/Users/Samar/Documents/projects/servicesapp/servicesapp/src/components/ListOfServices/index.jsx"],"names":["React","useState","useEffect","ServiceItem","Link","myServices","theme","db","ListOfServices","title","categoryId","filterByName","services","setServices","console","log","collection","onSnapshot","querySnapshot","docs","forEach","doc","service","data","user","get","category","push","filteredServices","filter","Number","id","name","toLowerCase","includes","styles","container","map","TouchableWithoutFeedback","marginTop","avatar","lastName","description","StyleSheet","create","common","fontSize","fontSizes","bigTitle","color","colors","white"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, TouchableWithoutFeedback } from 'react-native'\r\nimport { ServiceItem } from '../ServiceItem'\r\nimport { Link } from 'react-router-native'\r\nimport myServices from '../../data/services'\r\nimport theme from './../../styles/theme'\r\nimport { db } from '../../../database/firebase'\r\n\r\nexport const ListOfServices = ({ title = 'Servicios', categoryId, filterByName }) => {\r\n  const [services, setServices] = useState([])\r\n\r\n  useEffect(() => {\r\n    console.log('here')\r\n    const services = []\r\n    db.collection('services').onSnapshot((querySnapshot) => {\r\n      querySnapshot.docs.forEach(async doc => {\r\n        const service = doc.data()\r\n        const user = await service.user.get()\r\n        const category = await service.category.get()\r\n        service.user = user.data()\r\n        service.category = category.data()\r\n        services.push(service)\r\n      })\r\n    })\r\n    setServices(services)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (categoryId) {\r\n      const filteredServices = myServices.filter((service) => Number(service.category.id) === Number(categoryId))\r\n      setServices(filteredServices)\r\n    }\r\n  }, [categoryId])\r\n\r\n  useEffect(() => {\r\n    if (filterByName) {\r\n      const filteredServices = myServices.filter((service) => service.name.toLowerCase().includes(filterByName.toLowerCase()))\r\n      setServices(filteredServices)\r\n    }\r\n  }, [filterByName])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      {\r\n          services.map((service) => (\r\n            <Link key={service.id} to={`/service/${service.id}`} component={TouchableWithoutFeedback}>\r\n              <View style={{ marginTop: 20 }}>\r\n                <ServiceItem\r\n                  id={service.id}\r\n                  avatar={service.user.avatar}\r\n                  name={service.name}\r\n                  owner={`${service.user.name} ${service.user.lastName}`}\r\n                  category={service.category}\r\n                  description={service.description}\r\n                />\r\n\r\n              </View>\r\n            </Link>\r\n          ))\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    /* paddingVertical: 10 */\r\n    marginTop: 5\r\n  },\r\n  title: {\r\n    ...theme.common.title,\r\n    fontSize: theme.fontSizes.bigTitle,\r\n    color: theme.colors.white,\r\n    marginTop: 10\r\n    /* marginBottom: -20 */\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}