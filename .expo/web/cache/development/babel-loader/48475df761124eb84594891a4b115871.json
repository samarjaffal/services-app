{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samar\\\\Documents\\\\projects\\\\servicesapp\\\\servicesapp\\\\src\\\\components\\\\common\\\\Button\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#5271FF',\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: '#fff'\n  }\n});\nexport var Button = function Button(_ref) {\n  var color = _ref.color,\n      text = _ref.text,\n      textColor = _ref.textColor,\n      _ref$onClick = _ref.onClick,\n      onClick = _ref$onClick === void 0 ? null : _ref$onClick;\n\n  var buttonStyles = _objectSpread(_objectSpread({}, styles.button), {}, {\n    backgroundColor: color || styles.button.backgroundColor\n  });\n\n  var buttonText = _objectSpread(_objectSpread({}, styles.buttonText), {}, {\n    color: textColor || styles.buttonText.color\n  });\n\n  return React.createElement(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [_objectSpread(_objectSpread({}, buttonStyles), {}, {\n        opacity: pressed ? 0.6 : 1\n      })];\n    },\n    onPress: function onPress() {\n      return onClick ? onClick() : Alert.alert('Pressed');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, text || ''));\n};","map":{"version":3,"sources":["C:/Users/Samar/Documents/projects/servicesapp/servicesapp/src/components/common/Button/index.js"],"names":["React","styles","StyleSheet","create","button","backgroundColor","borderRadius","alignItems","justifyContent","paddingVertical","paddingHorizontal","buttonText","color","Button","text","textColor","onClick","buttonStyles","pressed","opacity","Alert","alert"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,eAAe,EAAE,CALX;AAMNC,IAAAA,iBAAiB,EAAE;AANb,GADuB;AAS/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AATmB,CAAlB,CAAf;AAcA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgD;AAAA,MAA7CD,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCE,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,0BAArBC,OAAqB;AAAA,MAArBA,OAAqB,6BAAX,IAAW;;AACpE,MAAMC,YAAY,mCACbhB,MAAM,CAACG,MADM;AAEhBC,IAAAA,eAAe,EAAEO,KAAK,IAAIX,MAAM,CAACG,MAAP,CAAcC;AAFxB,IAAlB;;AAKA,MAAMM,UAAU,mCACXV,MAAM,CAACU,UADI;AAEdC,IAAAA,KAAK,EAAEG,SAAS,IAAId,MAAM,CAACU,UAAP,CAAkBC;AAFxB,IAAhB;;AAKA,SACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAA,UAAGM,OAAH,SAAGA,OAAH;AAAA,aAAiB,iCAAMD,YAAN;AAAoBE,QAAAA,OAAO,EAAED,OAAO,GAAG,GAAH,GAAS;AAA7C,SAAjB;AAAA,KAAlB;AAAsF,IAAA,OAAO,EAAE;AAAA,aAAMF,OAAO,GAAGA,OAAO,EAAV,GAAeI,KAAK,CAACC,KAAN,CAAY,SAAZ,CAA5B;AAAA,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BG,IAAI,IAAI,EAAlC,CADF,CADF;AAKD,CAhBM","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, Pressable, Alert } from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: '#5271FF',\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 20\r\n  },\r\n  buttonText: {\r\n    color: '#fff'\r\n  }\r\n})\r\n\r\nexport const Button = ({ color, text, textColor, onClick = null }) => {\r\n  const buttonStyles = {\r\n    ...styles.button,\r\n    backgroundColor: color || styles.button.backgroundColor\r\n  }\r\n\r\n  const buttonText = {\r\n    ...styles.buttonText,\r\n    color: textColor || styles.buttonText.color\r\n  }\r\n\r\n  return (\r\n    <Pressable style={({ pressed }) => [{ ...buttonStyles, opacity: pressed ? 0.6 : 1 }]} onPress={() => onClick ? onClick() : Alert.alert('Pressed')}>\r\n      <Text style={buttonText}>{text || ''}</Text>\r\n    </Pressable>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}