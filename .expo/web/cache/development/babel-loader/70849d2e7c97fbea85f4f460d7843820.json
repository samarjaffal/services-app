{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { db } from \"../../database/firebase\";\nexport var useServices = function useServices(_ref) {\n  var categoryId = _ref.categoryId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      services = _useState2[0],\n      setServices = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var mapResults = useCallback(function _callee(querySnapshot) {\n    var services, _iterator, _step, doc, service, user, category;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            services = [];\n            _iterator = _createForOfIteratorHelperLoose(querySnapshot.docs);\n\n          case 2:\n            if ((_step = _iterator()).done) {\n              _context.next = 17;\n              break;\n            }\n\n            doc = _step.value;\n            service = doc.data();\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(service.user.get());\n\n          case 7:\n            user = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(service.category.get());\n\n          case 10:\n            category = _context.sent;\n            service.user = user.data();\n            service.category = category.data();\n            service.id = doc.id;\n            services.push(service);\n\n          case 15:\n            _context.next = 2;\n            break;\n\n          case 17:\n            return _context.abrupt(\"return\", services);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function () {\n    setLoading(true);\n    db.collection('services').onSnapshot(function _callee2(querySnapshot) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              mapResults(querySnapshot).then(function (result) {\n                setLoading(false);\n                console.log({\n                  result: result\n                });\n                setServices(result);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  useEffect(function () {\n    if (categoryId) {\n      console.log({\n        services: services,\n        categoryId: categoryId\n      }, 'a');\n      var filteredServices = services.filter(function (service) {\n        return Number(service.category.id) === Number(categoryId);\n      });\n      setServices(filteredServices);\n    }\n  }, [categoryId]);\n  return {\n    services: services,\n    loading: loading\n  };\n};","map":{"version":3,"sources":["C:/Users/Samar/Documents/projects/servicesapp/servicesapp/src/hooks/useServices.js"],"names":["useCallback","useEffect","useState","db","useServices","categoryId","services","setServices","loading","setLoading","mapResults","querySnapshot","docs","doc","service","data","user","get","category","id","push","collection","onSnapshot","then","result","console","log","filteredServices","filter","Number"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,EAAT;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC7C,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8BL,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,UAAU,GAAGV,WAAW,CAAC,iBAAOW,aAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBL,YAAAA,QADuB,GACZ,EADY;AAAA,wDAGXK,aAAa,CAACC,IAHH;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGlBC,YAAAA,GAHkB;AAIrBC,YAAAA,OAJqB,GAIXD,GAAG,CAACE,IAAJ,EAJW;AAAA;AAAA,6CAKRD,OAAO,CAACE,IAAR,CAAaC,GAAb,EALQ;;AAAA;AAKrBD,YAAAA,IALqB;AAAA;AAAA,6CAMJF,OAAO,CAACI,QAAR,CAAiBD,GAAjB,EANI;;AAAA;AAMrBC,YAAAA,QANqB;AAO3BJ,YAAAA,OAAO,CAACE,IAAR,GAAeA,IAAI,CAACD,IAAL,EAAf;AACAD,YAAAA,OAAO,CAACI,QAAR,GAAmBA,QAAQ,CAACH,IAAT,EAAnB;AACAD,YAAAA,OAAO,CAACK,EAAR,GAAaN,GAAG,CAACM,EAAjB;AACAb,YAAAA,QAAQ,CAACc,IAAT,CAAcN,OAAd;;AAV2B;AAAA;AAAA;;AAAA;AAAA,6CAatBR,QAbsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAc3B,EAd2B,CAA9B;AAgBAL,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,EAAE,CAACkB,UAAH,CAAc,UAAd,EAA0BC,UAA1B,CAAqC,kBAAOX,aAAP;AAAA;AAAA;AAAA;AAAA;AACnCD,cAAAA,UAAU,CAACC,aAAD,CAAV,CAA0BY,IAA1B,CAA+B,UAACC,MAAD,EAAY;AACzCf,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAgB,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,kBAAAA,MAAM,EAANA;AAAF,iBAAZ;AACAjB,gBAAAA,WAAW,CAACiB,MAAD,CAAX;AACD,eAJD;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArC;AAOD,GATQ,EASN,EATM,CAAT;AAWAvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,UAAJ,EAAgB;AACdoB,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEpB,QAAAA,QAAQ,EAARA,QAAF;AAAYD,QAAAA,UAAU,EAAVA;AAAZ,OAAZ,EAAsC,GAAtC;AACA,UAAMsB,gBAAgB,GAAGrB,QAAQ,CAACsB,MAAT,CAAgB,UAACd,OAAD;AAAA,eAAae,MAAM,CAACf,OAAO,CAACI,QAAR,CAAiBC,EAAlB,CAAN,KAAgCU,MAAM,CAACxB,UAAD,CAAnD;AAAA,OAAhB,CAAzB;AACAE,MAAAA,WAAW,CAACoB,gBAAD,CAAX;AACD;AACF,GANQ,EAMN,CAACtB,UAAD,CANM,CAAT;AAQA,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELE,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CA3CM","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\nimport { db } from '../../database/firebase'\r\n\r\nexport const useServices = ({ categoryId }) => {\r\n  const [services, setServices] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const mapResults = useCallback(async (querySnapshot) => {\r\n    const services = []\r\n\r\n    for (const doc of querySnapshot.docs) {\r\n      const service = doc.data()\r\n      const user = await service.user.get()\r\n      const category = await service.category.get()\r\n      service.user = user.data()\r\n      service.category = category.data()\r\n      service.id = doc.id\r\n      services.push(service)\r\n    }\r\n\r\n    return services\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    db.collection('services').onSnapshot(async (querySnapshot) => {\r\n      mapResults(querySnapshot).then((result) => {\r\n        setLoading(false)\r\n        console.log({ result })\r\n        setServices(result)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (categoryId) {\r\n      console.log({ services, categoryId }, 'a')\r\n      const filteredServices = services.filter((service) => Number(service.category.id) === Number(categoryId))\r\n      setServices(filteredServices)\r\n    }\r\n  }, [categoryId])\r\n\r\n  return {\r\n    services,\r\n    loading\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}