{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Samar\\\\Documents\\\\projects\\\\servicesapp\\\\servicesapp\\\\src\\\\components\\\\ListOfServices\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ServiceItem } from \"../ServiceItem\";\nimport { Link } from 'react-router-native';\nimport theme from \"./../../styles/theme\";\nimport { useServices } from \"../../hooks/useServices\";\nexport var ListOfServices = function ListOfServices(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Servicios' : _ref$title,\n      categoryId = _ref.categoryId,\n      filterByName = _ref.filterByName;\n\n  var _useServices = useServices({\n    categoryId: categoryId\n  }),\n      loading = _useServices.loading,\n      services = _useServices.services;\n\n  if (loading) {\n    return React.createElement(Text, {\n      style: {\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Cargando...\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, title), services.map(function (service) {\n    return React.createElement(Link, {\n      key: service.id,\n      to: \"/service/\" + service.id,\n      component: TouchableWithoutFeedback,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, React.createElement(ServiceItem, {\n      id: service.id,\n      avatar: service.user.avatar,\n      name: service.name,\n      owner: service.user.name + \" \" + service.user.lastName,\n      category: service.category,\n      description: service.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 5\n  },\n  title: _objectSpread(_objectSpread({}, theme.common.title), {}, {\n    fontSize: theme.fontSizes.bigTitle,\n    color: theme.colors.white,\n    marginTop: 10\n  })\n});","map":{"version":3,"sources":["C:/Users/Samar/Documents/projects/servicesapp/servicesapp/src/components/ListOfServices/index.jsx"],"names":["React","ServiceItem","Link","theme","useServices","ListOfServices","title","categoryId","filterByName","loading","services","color","styles","container","map","service","id","TouchableWithoutFeedback","marginTop","user","avatar","name","lastName","category","description","StyleSheet","create","common","fontSize","fontSizes","bigTitle","colors","white"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,OAAOC,KAAP;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAuD;AAAA,wBAApDC,KAAoD;AAAA,MAApDA,KAAoD,2BAA5C,WAA4C;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AACnF,qBAA8BJ,WAAW,CAAC;AAAEG,IAAAA,UAAU,EAAVA;AAAF,GAAD,CAAzC;AAAA,MAAQE,OAAR,gBAAQA,OAAR;AAAA,MAAiBC,QAAjB,gBAAiBA,QAAjB;;AASA,MAAID,OAAJ,EAAa;AACX,WAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAA5B,CADF,EAGMI,QAAQ,CAACI,GAAT,CAAa,UAACC,OAAD;AAAA,WACX,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAnB;AAAuB,MAAA,EAAE,gBAAcD,OAAO,CAACC,EAA/C;AAAqD,MAAA,SAAS,EAAEC,wBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,EAAE,EAAEH,OAAO,CAACC,EADd;AAEE,MAAA,MAAM,EAAED,OAAO,CAACI,IAAR,CAAaC,MAFvB;AAGE,MAAA,IAAI,EAAEL,OAAO,CAACM,IAHhB;AAIE,MAAA,KAAK,EAAKN,OAAO,CAACI,IAAR,CAAaE,IAAlB,SAA0BN,OAAO,CAACI,IAAR,CAAaG,QAJ9C;AAKE,MAAA,QAAQ,EAAEP,OAAO,CAACQ,QALpB;AAME,MAAA,WAAW,EAAER,OAAO,CAACS,WANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADW;AAAA,GAAb,CAHN,CADF;AAsBD,CApCM;AAsCP,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AAETK,IAAAA,SAAS,EAAE;AAFF,GADoB;AAK/BZ,EAAAA,KAAK,kCACAH,KAAK,CAACwB,MAAN,CAAarB,KADb;AAEHsB,IAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,SAAN,CAAgBC,QAFvB;AAGHnB,IAAAA,KAAK,EAAER,KAAK,CAAC4B,MAAN,CAAaC,KAHjB;AAIHd,IAAAA,SAAS,EAAE;AAJR;AAL0B,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View, TouchableWithoutFeedback } from 'react-native'\r\nimport { ServiceItem } from '../ServiceItem'\r\nimport { Link } from 'react-router-native'\r\nimport theme from './../../styles/theme'\r\nimport { useServices } from '../../hooks/useServices'\r\n\r\nexport const ListOfServices = ({ title = 'Servicios', categoryId, filterByName }) => {\r\n  const { loading, services } = useServices({ categoryId })\r\n\r\n  //   useEffect(() => {\r\n  //     if (filterByName) {\r\n  //       const filteredServices = myServices.filter((service) => service.name.toLowerCase().includes(filterByName.toLowerCase()))\r\n  //       setServices(filteredServices)\r\n  //     }\r\n  //   }, [filterByName])\r\n\r\n  if (loading) {\r\n    return <Text style={{ color: 'white' }}>Cargando...</Text>\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      {\r\n          services.map((service) => (\r\n            <Link key={service.id} to={`/service/${service.id}`} component={TouchableWithoutFeedback}>\r\n              <View style={{ marginTop: 20 }}>\r\n                <ServiceItem\r\n                  id={service.id}\r\n                  avatar={service.user.avatar}\r\n                  name={service.name}\r\n                  owner={`${service.user.name} ${service.user.lastName}`}\r\n                  category={service.category}\r\n                  description={service.description}\r\n                />\r\n\r\n              </View>\r\n            </Link>\r\n          ))\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    /* paddingVertical: 10 */\r\n    marginTop: 5\r\n  },\r\n  title: {\r\n    ...theme.common.title,\r\n    fontSize: theme.fontSizes.bigTitle,\r\n    color: theme.colors.white,\r\n    marginTop: 10\r\n    /* marginBottom: -20 */\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}